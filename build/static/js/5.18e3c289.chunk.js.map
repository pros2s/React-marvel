{"version":3,"sources":["components/randomChar/charBlock.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/charComp.js","components/charInfo/CharInfo.js","components/charSearch/SearchResult.js","components/charSearch/CharSearch.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","helpers/error.gif","helpers/error.js","services/services.js","hooks/hook.http.js","components/skeleton/Skeleton.js","utils/setContent.js","utils/setContentFrstRequest.js"],"names":["CharBlock","data","name","description","thumbnail","homepage","wiki","objectFit","className","src","style","alt","href","target","rel","RandomChar","useState","char","setChar","useEffect","characterData","timer","setInterval","clearInterval","onCharLoaded","useServices","total","getEveryOne","getCharacter","clearError","process","setProcess","randomTotal","then","result","Math","floor","random","res","resArr","forEach","push","id","randElemArr","length","setContent","onClick","mjolnir","CharList","props","newCharsLoading","setNewCharsLoading","charsEnded","setCharsEnded","charlist","setCharList","offset","setOffset","getAllCharacters","onRequest","initial","onCharsLoaded","newCharlist","ended","refItems","useRef","focusedAndSelected","i","onCharSelected","refCur","current","item","classList","remove","add","focus","onFocus","content","useMemo","setContentFrstRequest","map","ref","element","tabIndex","onKeyPress","e","key","disabled","CharComp","comics","charList","resourceURI","to","match","CharInfo","charId","showTrigger","setShowTrigger","CSSTransition","in","timeout","classNames","SearchResult","CharSearch","error","loading","getCharacterByName","errMessage","initialValues","charName","validationSchema","yup","required","onSubmit","charReq","htmlFor","type","placeholder","component","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedChar","Helmet","decoration","Error","display","width","height","margin","errorGif","request","useCallback","url","a","method","body","headers","fetch","response","ok","status","json","useHttp","_apiLink","_apiKey","limit","results","_transformCharacters","getAllComics","_transformComics","getComics","charData","path","extension","urls","items","comicsData","title","language","textObjects","price","prices","pageCount","Skeleton"],"mappings":"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","file":"static/js/5.18e3c289.chunk.js","sourcesContent":["const CharBlock = ({ data }) => {\r\n  const { name, description, thumbnail, homepage, wiki } = data;\r\n\r\n  const noDescMessage = 'Here should be description of personage';\r\n  const objectFit = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ?\r\n                    'contain' :\r\n                    'cover';\r\n\r\n  return (\r\n    <div className='randomchar__block'>\r\n      <img src={ thumbnail } style={{ objectFit }} alt='Random character' className='randomchar__img'/>\r\n\r\n      <div className='randomchar__info'>\r\n        <p className='randomchar__name'>{ name }</p>\r\n        <p className='randomchar__descr'>{ description || noDescMessage }</p>\r\n\r\n        <div className='randomchar__btns'>\r\n          <a href={ homepage } className='button button__main' target='_blank' rel='noopener noreferrer'>\r\n            <div className='inner'>homepage</div>\r\n          </a>\r\n\r\n          <a href={ wiki } className='button button__secondary' target='_blank' rel='noopener noreferrer'>\r\n            <div className='inner'>Wiki</div>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CharBlock;\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\r\n\r\nimport useServices from '../../services/services';\r\nimport CharBlock from './charBlock';\r\nimport setContent from '../../utils/setContent';\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nconst RandomChar = () => {\r\n  const [ char, setChar ] = useState({});\r\n\r\n  useEffect(() => {\r\n    characterData();\r\n\r\n    const timer = setInterval(characterData, 100000);\r\n\r\n    return () => { clearInterval(timer); };\r\n  }, []) ; // eslint-disable-line\r\n\r\n\r\n  const onCharLoaded = (char) => { setChar(char); }\r\n\r\n\r\n  const { total, getEveryOne, getCharacter, clearError, process, setProcess } = useServices();\r\n  const characterData = () => {\r\n    let randomTotal;\r\n    total().then((result) => {\r\n      randomTotal = Math.floor(Math.random() * ((result + 1) - 100) + 100);\r\n\r\n      getEveryOne(randomTotal)\r\n        .then((res) => {\r\n          let resArr = [];\r\n          res.forEach((result) => resArr.push(result.id));\r\n\r\n          const randElemArr = Math.floor(Math.random() * resArr.length),\r\n                id = resArr[randElemArr];\r\n\r\n          clearError();\r\n          getCharacter(id)\r\n            .then(onCharLoaded)\r\n            .then(() => setProcess('confirmed'));\r\n        });\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='randomchar'>\r\n      { setContent(CharBlock, process, char) }\r\n\r\n      <div className='randomchar__static'>\r\n        <p className='randomchar__title'>\r\n          Random character for today!<br/>\r\n          Do you want to get to know him better?\r\n        </p>\r\n\r\n        <p className='randomchar__title'>\r\n          Or choose another one\r\n        </p>\r\n\r\n        <button className='button button__main' onClick={ characterData }>\r\n          <div className='inner'>try it</div>\r\n        </button>\r\n\r\n        <img src={ mjolnir } alt='mjolnir' className='randomchar__decoration'/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RandomChar;\r\n","import { useState, useEffect, useRef, useMemo } from 'react';\r\n\r\nimport setContentFrstRequest from '../../utils/setContentFrstRequest';\r\nimport useServices from '../../services/services';\r\n\r\nimport './charList.scss';\r\n\r\n\r\nconst CharList = (props) => {\r\n  const [ newCharsLoading, setNewCharsLoading ] = useState(false);\r\n  const [ charsEnded, setCharsEnded ] = useState(false);\r\n  const [ charlist, setCharList ] = useState([]);\r\n  const [ offset, setOffset ] = useState(210);\r\n\r\n  const { getAllCharacters, process, setProcess } = useServices();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n  }, []); // eslint-disable-line\r\n\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setNewCharsLoading(false) : setNewCharsLoading(true);\r\n    getAllCharacters(offset)\r\n      .then(onCharsLoaded)\r\n      .then(() => setProcess('confirmed'));\r\n  };\r\n\r\n  const onCharsLoaded = (newCharlist) => {\r\n    let ended = newCharlist.length < 9 ? true : false;\r\n\r\n    setCharList([...charlist, ...newCharlist]);\r\n    setOffset((offset) => offset + 9);\r\n    setNewCharsLoading(false);\r\n    setCharsEnded(ended);\r\n  };\r\n\r\n\r\n  const refItems = useRef([]);\r\n\r\n  const onFocus = (id) => {\r\n    const refCur = refItems.current;\r\n\r\n    refCur.forEach((item) => item.classList.remove('char__item_selected'));\r\n    refCur[id].classList.add('char__item_selected');\r\n    refCur[id].focus();\r\n  };\r\n\r\n  const focusedAndSelected = (id, i) => {\r\n    props.onCharSelected(id);\r\n    onFocus(i);\r\n  };\r\n\r\n\r\n  const prepareToRender = () => {\r\n    return charlist.map((item, i) => {\r\n      const objectFit = item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ?\r\n                        'contain' :\r\n                        'cover';\r\n      return (\r\n        <li\r\n          className='char__item'\r\n          ref={(element) => refItems.current[i] = element}\r\n          tabIndex={0}\r\n          key={ item.id }\r\n          onClick={ () => focusedAndSelected(item.id, i) }\r\n          onKeyPress={(e) => {\r\n              if (e.key === ' ' || e.key === 'Enter') {\r\n                focusedAndSelected(item.id, i);\r\n              };\r\n            }\r\n          }>\r\n            <img style={ { objectFit } } src={ item.thumbnail } alt={ item.name }/>\r\n            <div className='char__name'>{ item.name }</div>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  const content = useMemo(() => {\r\n    return setContentFrstRequest(() => prepareToRender(), process, newCharsLoading);\r\n    // eslint-disable-next-line\r\n  }, [process]);\r\n\r\n\r\n  return (\r\n    <div className='char__list'>\r\n      <ul className='char__grid'>\r\n          { content }\r\n      </ul>\r\n\r\n      <button\r\n        className='button button__main button__long'\r\n        style={{ 'display': charsEnded ? 'none' : 'block' }}\r\n        disabled={ newCharsLoading }\r\n        onClick={ () =>   onRequest(offset) }>\r\n          <div className='inner'>load more</div>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CharList;\r\n","import { Link } from 'react-router-dom';\r\n\r\nconst CharComp = ({ data }) => {\r\n  const { name, description, thumbnail, homepage, wiki, comics } = data;\r\n  const objectFit = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ?\r\n                    'contain' :\r\n                    'cover';\r\n\r\n  let charList = comics.map(({ resourceURI, name }, i) => {\r\n      // eslint-disable-next-line\r\n      if (i > 9) return;\r\n\r\n      return(\r\n        <Link\r\n          style={{ 'width': '100%' }}\r\n          to={ `${resourceURI.match(/\\/comics\\/[0-9]/g)}` }\r\n          key={i}>\r\n            <li\r\n              className='char__comics-item'\r\n              key={ i }\r\n              tabIndex={ 0 }>\r\n                { name }\r\n            </li>\r\n        </Link>\r\n      )\r\n    }\r\n  )\r\n  if (comics.length === 0) charList = 'Here should be some comicses';\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className='char__basics'>\r\n        <img style={ { objectFit } } src={ thumbnail } alt={ name }/>\r\n        <div>\r\n          <div className='char__info-name'>{ name }</div>\r\n          <div className='char__btns'>\r\n            <a href={ homepage } className='button button__main' target='_blank' rel='noopener noreferrer'>\r\n              <div className='inner'>homepage</div>\r\n            </a>\r\n            <a href={ wiki } className='button button__secondary' target='_blank' rel='noopener noreferrer'>\r\n              <div className='inner'>Wiki</div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='char__descr'>\r\n        { description }\r\n      </div>\r\n\r\n      <div className='char__comics'>Comics:</div>\r\n      <ul className='char__comics-list'>\r\n        { charList }\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharComp;\r\n","import { useState, useEffect } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport setContent from '../../utils/setContent';\r\nimport useServices from '../../services/services';\r\nimport CharComp from './charComp';\r\n\r\nimport './charInfo.scss';\r\n\r\nconst CharInfo = (props) => {\r\n  const { charId } = props;\r\n\r\n  const [ char, setChar ] = useState(null);\r\n  const [ showTrigger, setShowTrigger ] = useState(false);\r\n\r\n  useEffect(() => {\r\n    characterData();\r\n  }, [ charId ]); // eslint-disable-line\r\n\r\n\r\n  const onCharLoaded = (char) => {\r\n    setShowTrigger(true);\r\n    setChar(char);\r\n  };\r\n\r\n  const { getCharacter, clearError, process, setProcess } = useServices();\r\n\r\n  const characterData = () => {\r\n    if (!charId) return;\r\n\r\n    setShowTrigger(false);\r\n    clearError();\r\n    getCharacter(charId)\r\n      .then(onCharLoaded)\r\n      .then(() => setProcess('confirmed'));\r\n  };\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={ showTrigger }\r\n      timeout={ 1000 }\r\n      classNames='char__animate'>\r\n        <div className='char__info'>\r\n          { setContent(CharComp, process, char) }\r\n        </div>\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\nexport default CharInfo;\r\n","import { Link } from 'react-router-dom';\r\n\r\nconst SearchResult = ({ char }) => {\r\n  const content = char.length > 0 ?\r\n          (\r\n            <div className='char__search-wrapper'>\r\n              <div className='char__search-success'>There is! Do you want to visit { char[0].name } page?</div>\r\n              <Link to={ `/characters/${char[0].id}` } className='button button__secondary'>\r\n                  <div className='inner'>To page</div>\r\n              </Link>\r\n            </div>\r\n          ) :\r\n          (\r\n            <div className='char__search-error'>\r\n              The character was not found. Check the name and try again\r\n            </div>\r\n          )\r\n\r\n  return (\r\n    <>\r\n      { content }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchResult;\r\n","import { useState } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport useServices from '../../services/services';\r\nimport Error from '../../helpers/error';\r\nimport SearchResult from './SearchResult';\r\n\r\nimport './charSearch.scss';\r\n\r\n\r\nconst CharSearch = () => {\r\n  const [ char, setChar ] = useState(null);\r\n  const { error, loading, getCharacterByName, clearError } = useServices();\r\n\r\n  const onCharLoaded = (char) => { setChar(char) };\r\n  const charReq = (charName) => {\r\n    clearError();\r\n\r\n    getCharacterByName(charName)\r\n      .then(onCharLoaded);\r\n  }\r\n\r\n\r\n  const errMessage = error ? <div className='char__search-critical-error'><Error/></div> : null;\r\n  const result = !char ? null : <SearchResult char={ char }/>\r\n\r\n\r\n  return (\r\n    <div className='char__search-form'>\r\n      <Formik\r\n        initialValues={{\r\n          charName: ''\r\n        }}\r\n        validationSchema={\r\n          yup.object({\r\n            charName: yup.string().required('This field has to be required')\r\n          })\r\n        }\r\n        onSubmit={ ({ charName }) => { charReq(charName) } }>\r\n        <Form>\r\n          <label htmlFor='charName' className='char__search-label'>Or find a character by name:</label>\r\n          <div className='char__search-wrapper'>\r\n            <Field\r\n              id='charName'\r\n              type='text'\r\n              name='charName'\r\n              placeholder='Enter name'/>\r\n            <button\r\n              className='button button__main'\r\n              type='submit'\r\n              disabled={ loading }>\r\n                <div className='inner'>find</div>\r\n            </button>\r\n          </div>\r\n          <ErrorMessage className='char__search-error' component='div' name='charName'/>\r\n        </Form>\r\n      </Formik>\r\n      { result }\r\n      { errMessage }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default CharSearch;\r\n","import { Component } from 'react';\r\nimport Error from '../../helpers/error';\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({ error: true });\r\n  };\r\n\r\n\r\n  render() {\r\n    if (this.state.error) return <Error/>;\r\n\r\n    return this.props.children;\r\n  };\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport RandomChar from '../randomChar/RandomChar';\r\nimport CharList from '../charList/CharList';\r\nimport CharInfo from '../charInfo/CharInfo';\r\nimport CharSearch from '../charSearch/CharSearch';\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n  const [ selectedChar, setChar ] = useState(null);\r\n  const onCharSelected = (id) => setChar(id);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta\r\n          name='description'\r\n          content='Marvel information portal'\r\n        />\r\n        <title>Marvel information portal</title>\r\n      </Helmet>\r\n\r\n      <ErrorBoundary>\r\n        <RandomChar/>\r\n      </ErrorBoundary>\r\n\r\n      <div className='char__content'>\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={ onCharSelected }/>\r\n        </ErrorBoundary>\r\n\r\n        <ErrorBoundary>\r\n          <div className='char__settings'>\r\n            <CharInfo charId={ selectedChar }/>\r\n            <CharSearch/>\r\n          </div>\r\n        </ErrorBoundary>\r\n      </div>\r\n      <img className='bg-decoration' src={ decoration } alt='vision'/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","export default __webpack_public_path__ + \"static/media/error.95e73800.gif\";","import errorGif from './error.gif'\r\n\r\nconst Error = () => {\r\n  return (\r\n    <img style={{ display: 'block', width: '150px', height: '150px', margin: 'auto' }} src={errorGif} alt='error gif' />\r\n  )\r\n}\r\n\r\nexport default Error;\r\n","import { useHttp } from '../hooks/hook.http';\r\n\r\nconst useServices = () => {\r\n  const { request, clearError, process, setProcess } = useHttp();\r\n\r\n  const _apiLink = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = 'apikey=bc1bc939b59f4d12e5d6c2fcf66f7563';\r\n  const _baseOffset = 10;\r\n\r\n\r\n  const total = async () => {\r\n    const res = await request(`${_apiLink}characters?${_apiKey}`);\r\n    return res.data.total;\r\n  }\r\n\r\n  const getEveryOne = async (limit = 100) => {\r\n    const res = await request(`${_apiLink}characters?limit=100&offset=${limit}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacters);\r\n  }\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(`${_apiLink}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacters);\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiLink}characters?name=${name}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacters);\r\n  }\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiLink}characters/${id}?${_apiKey}`);\r\n    return _transformCharacters(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(`${_apiLink}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComics = async (id) => {\r\n    const res = await request(`${_apiLink}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacters = (charData) => {\r\n    return {\r\n      id: charData.id,\r\n      name: charData.name,\r\n      description: charData.description,\r\n      thumbnail: charData.thumbnail.path + '.' + charData.thumbnail.extension,\r\n      homepage: charData.urls[0].url,\r\n      wiki: charData.urls[1].url,\r\n      comics: charData.comics.items\r\n    };\r\n  };\r\n\r\n  const _transformComics = (comicsData) => {\r\n    return {\r\n      id: comicsData.id,\r\n      title: comicsData.title,\r\n      description: comicsData.description || 'There is no description',\r\n      thumbnail: comicsData.thumbnail.path + '.' + comicsData.thumbnail.extension,\r\n      language: comicsData.textObjects.language || 'en-us',\r\n      price: comicsData.prices.price ? `${comicsData.prices.price}$` : 'not available',\r\n      pageCount: comicsData.pageCount ? `${comicsData.pageCount} pages` : 'No information about the number of pages',\r\n      url: comicsData.urls[0].url\r\n    }\r\n  }\r\n\r\n  return {\r\n    total,\r\n    process,\r\n    getEveryOne,\r\n    getAllCharacters,\r\n    getCharacterByName,\r\n    getCharacter,\r\n    clearError,\r\n    setProcess,\r\n    getAllComics,\r\n    getComics\r\n  };\r\n}\r\n\r\nexport default useServices;","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [ process, setProcess ] = useState('waiting');\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-type': 'application/json' }) => {\r\n    setProcess('loading');\r\n\r\n    try {\r\n      const response = await fetch(url, { method, body, headers });\r\n\r\n      if (!response.ok) throw new Error(`Could not fetch ${url}; status: ${response.status}`);\r\n\r\n      return response.json();\r\n    }\r\n    catch (err) {\r\n      setProcess('error');\r\n      throw err\r\n    }\r\n  }, []);\r\n\r\n  const clearError = useCallback(() => {\r\n    setProcess('loading');\r\n  }, []);\r\n\r\n  return { request, clearError, process, setProcess };\r\n}\r\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n  return (\n    <>\n      <p className='char__select'>Please select a character to see information</p>\n      <div className='skeleton'>\n\n        <div className='pulse skeleton__header'>\n          <div className='pulse skeleton__circle'></div>\n          <div className='pulse skeleton__mini'></div>\n        </div>\n\n        <div className='pulse skeleton__block'></div>\n        <div className='pulse skeleton__block'></div>\n        <div className='pulse skeleton__block'></div>\n      </div>\n    </>\n  )\n}\n\nexport default Skeleton;","import Error from '../helpers/error';\r\nimport Loading from '../helpers/loading';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\n  const setContent = (Component, process, data) => {\r\n    switch (process) {\r\n      case 'waiting':\r\n        return <Skeleton/>;\r\n      case 'loading':\r\n        return <Loading/>;\r\n      case 'error':\r\n        return <Error/>;\r\n      case 'confirmed':\r\n        return <Component data={ data }/>;\r\n      default:\r\n        throw new Error('Unexpected process state');\r\n    }\r\n  }\r\n\r\n  export default setContent;\r\n","import Error from '../helpers/error';\r\nimport Loading from '../helpers/loading';\r\n\r\nconst setContentFrstRequest = (Component, process, newCharsLoading) => {\r\n  switch (process) {\r\n    case 'waiting':\r\n      return <Loading/>;\r\n    case 'loading':\r\n      return newCharsLoading ? <Component/> : <Loading/>;\r\n    case 'error':\r\n      return <Error/>;\r\n    case 'confirmed':\r\n      return <Component/>;\r\n    default:\r\n      throw new Error('Unexpected process state');\r\n  }\r\n}\r\n\r\nexport default setContentFrstRequest;\r\n"],"sourceRoot":""}